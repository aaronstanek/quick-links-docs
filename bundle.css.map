{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "svelte\\App.svelte",
    "svelte\\Header1.svelte",
    "svelte\\InlineCode.svelte"
  ],
  "sourcesContent": [
    "<script lang=\"ts\">import Header1 from \"./Header1.svelte\";\r\nimport Header2 from \"./Header2.svelte\";\r\nimport Contents from \"./Contents.svelte\";\r\nimport InlineCode from \"./InlineCode.svelte\";\r\nimport Header3 from \"./Header3.svelte\";\r\n</script>\n\n<div class=\"centraltext\">\n\t<Header1 tag=\"quick-links\" text=\"Quick Links\"></Header1>\n\t<p class=\"it\">\n\t\tNever bookmark a webpage again!\n\t</p>\n\t<p>\n\t\tThe Quick Links browser extension allows you to rapidly revisit\n\t\twebpages without needing to dig through your\n\t\tbrowser history or bookmarks bar.\n\t</p>\n\t<p>\n\t\tAll you have to do is come up\n\t\twith a memorable name for a webpage you want to visit again,\n\t\tthen later type that name into your URL bar to zip back to that page!\n\t</p>\n\t<p>\n\t\tLet's say that you need to reference a periodic table for your work.\n\t\tIt's easy enough to Google \"periodic table\" and find what you're looking for,\n\t\tbut if you need to access the periodic table frequency, you'd certainly want\n\t\ta faster way to return to the webpage than going through the Google\n\t\tsearch results every time. A bookmark would certainly accomplish this,\n\t\tbut then you'd still need to go find the bookmark and click on it.\n\t\tIf you have enough bookmarks, then this search through your bookmarks\n\t\tbar could potentially take just as long as the Google search would have taken!\n\t</p>\n\t<p>\n\t\tWith Quick Links, you could easily associate the keyword \"periodic\" with\n\t\tthe periodic table reference webpage. Then returning to the webpage is as\n\t\teasy as typing \"go periodic\" into your URL bar and hitting the enter key.\n\t\tFaster and easier than using a bookmark!\n\t</p>\n\t<Contents></Contents>\n\t<Header2 tag=\"installation\" text=\"Installation\"></Header2>\n\t<p>\n\t\t<a href=\"https://chrome.google.com/webstore/detail/quick-links/mjajgkekioonpenodhpklcfpcdnonmcm\">\n\t\t\tDownload from the Chrome Web Store\n\t\t</a>\n\t</p>\n\t<p>\n\t\tQuick Links is known to be compatible with the desktop\n\t\teditions of Google Chrome, Microsoft Edge, Opera, and Brave.\n\t\tIt also works on the Kiwi browser for Android, although the user\n\t\texperience is still being improved for this platform.\n\t\tThe extension should work on all other Chromium-based browsers\n\t\tthat support Chrome extensions.\n\t</p>\n\t<p>\n\t\tThe extension could not be installed on Firefox version <InlineCode text=\"103.0.2\"></InlineCode>,\n\t\tbut future versions of Firefox may support it.\n\t\tQuick Links cannot be installed on Safari;\n\t\tthere are no plans to change this.\n\t</p>\n\t<Header2 tag=\"making-a-new-link\" text=\"Making a new link\"></Header2>\n\t<p>\n\t\tIn the upper right of your browser, you'll see a puzzle piece icon.\n\t\tIf you click it and select \"Quick Links\", a popup like the one\n\t\tdepicted below will appear.\n\t</p>\n\t<img src=\"img/popup_empty_web.png\" alt=\"The Quick Links popup menu. The input fields are empty.\">\n\t<p>\n\t\tTip: for faster access in the future, you can pin the Quick Links\n\t\ticon to the toolbar using the pin icon in the puzzle piece icon's dropdown menu.\n\t</p>\n\t<p>\n\t\tTo create a new Quick Link,\n\t\tjust fill in the URL and Quick Link fields,\n\t\tthen press CREATE. It's that easy!\n\t</p>\n\t<img src=\"img/popup_example_web.png\" alt=\"The Quick Links popup menu. The URL field contains the string &quot;https://example.com&quot; and the Quick Link field contains the string &quot;coolwebsite&quot;.\">\n\t<p>\n\t\tThe example above will associate the keyword <InlineCode text=\"coolwebsite\"></InlineCode>\n\t\twith the webpage <InlineCode text=\"https://example.com\"></InlineCode>.\n\t\tSo now you can go to <InlineCode text=\"https://example.com\"></InlineCode>\n\t\tby typing <InlineCode text=\"coolwebsite\"></InlineCode> into your URL bar.\n\t</p>\n\t<p>\n\t\tThe popup will pre-fill the URL field with the URL of the current page.\n\t\tSo, you only have to fill out the Quick Link field.\n\t</p>\n\t<Header3 tag=\"other-ways-to-make-a-link\" text=\"Other ways to make a link\"></Header3>\n\t<p>\n\t\tThere is a preregistered dynamic link for creating new links.\n\t\t<InlineCode text=\"links/new/<quick-link-keyword>\"></InlineCode>\n\t\tThis is useful if you have the destination URL copied to your clipboard, and\n\t\tyou only want to enter the Quick Link keyword.\n\t</p>\n\t<p>\n\t\tIf you <a href=\"#using-a-link\">use a link</a> that hasn't been created yet,\n\t\tthen you will be prompted to create the link.\n\t\tThis is useful in cases where you expected a link to exist, but it hasn't\n\t\tbeen registered yet. You will be prompted for the destination URL.\n\t\tUpon success, you will be redirected to the <a href=\"#link-management\">link management page</a>.\n\t</p>\n\t<p>\n\t\tLinks can be created from the <a href=\"#link-management\">link management page</a>.\n\t</p>\n\t<p>\n\t\tIf you want to create a large number of links that already exist in another\n\t\tinstance of Quick Links, consider <a href=\"#exporting-links\">exporting</a>\n\t\tthen <a href=\"#importing-links\">importing</a> the links.\n\t</p>\n\t<Header2 tag=\"using-a-link\" text=\"Using a link\"></Header2>\n\t<p>\n\t\tTo use a link, just go to the URL bar and type\n\t\tthe word <InlineCode text=\"go\"></InlineCode> followed by a single space, as seen below.\n\t</p>\n\t<img src=\"img/go_web.png\" alt=\"URL bar with the word &quot;go&quot; and then a space.\">\n\t<p>\n\t\tAs soon as you type the space, the Quick Links input context will be displayed.\n\t\tThis lets you know that you are entering a Quick Link and not a URL or a\n\t\tweb search query.\n\t</p>\n\t<img src=\"img/quick_links_web.png\" alt=\"URL bar with Quick Links input context.\">\n\t<p>\n\t\tThen we just enter the Quick Link keyword that we registered earlier.\n\t\tIf we wanted to use the link created in the <a href=\"#making-a-new-link\">Making a new link</a> section,\n\t\twe would type <InlineCode text=\"coolwebsite\"></InlineCode>, as seen below.\n\t</p>\n\t<img src=\"img/coolwebsite_web.png\" alt=\"URL bar with Quick Links input context. &quot;coolwebsite&quot; has been input.\">\n\t<p>\n\t\tPressing the enter key will submit the link.\n\t\tIn this case, we will be directed to <InlineCode text=\"https://example.com\"></InlineCode>.\n\t</p>\n\t<Header2 tag=\"link-management\" text=\"Link management\"></Header2>\n\t<p>\n\t\tTo delete or edit a link, you will have to access the link management page.\n\t\tThe fastest way to do this is to <a href=\"#using-a-link\">use</a>\n\t\tthe preregistered link: <InlineCode text=\"links\"></InlineCode>.\n\t</p>\n\t<img src=\"img/links_web.png\" alt=\"Quick Links input context in URL bar with &quot;links&quot; input.\">\n\t<p>\n\t\tThe link management page can also be accessed from a link on the\n\t\ttop of the toolbar popup menu.\n\t</p>\n\t<p>\n\t\tThe link management page is show below.\n\t</p>\n\t<img src=\"img/main_empty_web.png\" alt=\"The link management page with no links registered.\">\n\t<Header3 tag=\"deleting-links\" text=\"Deleting links\"></Header3>\n\t<p>\n\t\tTo delete a link, locate it in the table of links on the link management page.\n\t\tThen click the trash can icon on the far right of the row of that link.\n\t</p>\n\t<Header3 tag=\"editing-links\" text=\"Editing links\"></Header3>\n\t<p>\n\t\tTo edit a link, locate it in the table of links on the link management page.\n\t\tThen click the pencil icon on the right of the row of that link.\n\t</p>\n\t<img src=\"img/edit_1_web.png\" alt=\"The link management page with editing interface active.\">\n\t<p>\n\t\tThe second row of the image above shows the editing interface\n\t\twhich appears after the pencil icon is pressed.\n\t\tOnce you have updated the two text fields of the row to be what you want.\n\t\tClick the checkmark icon, or press the enter key.\n\t\tTo discard changes, press the X icon on the far right.\n\t</p>\n\t<Header2 tag=\"dynamic-links\" text=\"Dynamic Links\"></Header2>\n\t<p>\n\t\tDynamic links are a feature not possible with regular bookmarks.\n\t\tA dynamic link is a template which can be reused\n\t\tto link many Quick Link keywords to many URLs.\n\t</p>\n\t<p>\n\t\tFor example, if you wanted to create a link to every article on the\n\t\tEnglish-language Wikipedia, you could register a Quick Link\n\t\t<InlineCode text=\"wiki/\"></InlineCode><InlineCode text=\"%X1\" color=\"red\"></InlineCode>\n\t\tpointing to URLs of the form\n\t\t<InlineCode text=\"https://en.wikipedia.org/wiki/\"></InlineCode><InlineCode text=\"%X1\" color=\"red\"></InlineCode>,\n\t\twhere <InlineCode text=\"%X1\" color=\"red\"></InlineCode> is a variable to\n\t\tbe resolved when the link is used.\n\t</p>\n\t<p>\n\t\tSo, the keyword <InlineCode text=\"wiki/potato\"></InlineCode> would take you to the Wikipedia\n\t\tarticle about potatoes, and <InlineCode text=\"wiki/sun\"></InlineCode> would take\n\t\tyou to the Wikipedia article about the Sun, etc...\n\t</p>\n\t<img src=\"img/main_example_4_web.png\" alt=\"The link management page with &quot;wiki/%X1&quot; in the Quick Link input and &quot;https://en.wikipedia.org/wiki/%X1&quot; in the URL input.\">\n\t<p>\n\t\tYou can even use multiple variables!\n\t\tEach variable takes the form <InlineCode text=\"%X[0-9]\"></InlineCode>.\n\t\tThe set of variables used in the Quick Link and in the URL must match,\n\t\tbut do not need to appear in the same order.\n\t\tA Quick Link may not contain more than one instance of a given variable.\n\t\tVariables may appear multiple times in a URL.\n\t</p>\n\t<p>\n\t\tFor performance reasons, the placement of variables in a Quick Link\n\t\tis restricted. Each variable must be preceded by a <InlineCode text=\"/\"></InlineCode>\n\t\tcharacter, and may only be followed by another variable (preceded by a <InlineCode text=\"/\"></InlineCode>)\n\t\tor the end of the Quick Link.\n\t\tSo,\n\t\t<InlineCode text=\"example/\"></InlineCode><InlineCode text=\"%X1\" color=\"red\"></InlineCode><InlineCode text=\"/\"></InlineCode><InlineCode text=\"%X2\" color=\"red\"></InlineCode>\n\t\tis well formatted. But\n\t\t<InlineCode text=\"example/\"></InlineCode><InlineCode text=\"%X1%X2\" color=\"red\"></InlineCode>,\n\t\t<InlineCode text=\"example/\"></InlineCode><InlineCode text=\"%X1\" color=\"red\"></InlineCode><InlineCode text=\"/\"></InlineCode><InlineCode text=\"%X2\" color=\"red\"></InlineCode><InlineCode text=\"/text\"></InlineCode>,\n\t\t<InlineCode text=\"example/\"></InlineCode><InlineCode text=\"%X1\" color=\"red\"></InlineCode><InlineCode text=\"/text/\"></InlineCode><InlineCode text=\"%X2\" color=\"red\"></InlineCode>, and\n\t\t<InlineCode text=\"%X1\" color=\"red\"></InlineCode><InlineCode text=\"/example/\"></InlineCode><InlineCode text=\"%X2\" color=\"red\"></InlineCode>\n\t\twill all be rejected.\n\t</p>\n\t<Header2 tag=\"exporting-links\" text=\"Exporting links\"></Header2>\n\t<p>\n\t\tTo export the links saved in your browser, either to back up,\n\t\tor to transfer to another computer, <a href=\"#using-a-link\">use</a>\n\t\tthe preregistered link <InlineCode text=\"links/export\"></InlineCode>\n\t\tor click the <InlineCode text=\"export\"></InlineCode>\n\t\tlink in the toolbar popup menu.\n\t</p>\n\t<img src=\"img/export_web.png\" alt=\"The export page.\">\n\t<p>\n\t\tOn the export page, all the links saved in your browser\n\t\tare displayed as a JSON blob. You can either copy the text manually,\n\t\tor click the <InlineCode text=\"Copy to clipboard\"></InlineCode> button.\n\t</p>\n\t<p>\n\t\tOnce you have copied the JSON blob, either move it to another browser, or save it\n\t\tsomeplace for later use.\n\t</p>\n\t<Header2 tag=\"importing-links\" text=\"Importing links\"></Header2>\n\t<p>\n\t\tImporting links into your browser is almost identical to <a href=\"#exporting-links\">exporting</a>.\n\t</p>\n\t<p>\n\t\tUse the preregistered link <InlineCode text=\"links/import\"></InlineCode>\n\t\tor click the link in the toolbar popup menu.\n\t</p>\n\t<img src=\"img/import_example_web.png\" alt=\"The import page.\">\n\t<p>\n\t\tPaste the JSON blob from the <a href=\"#exporting-links\">export</a>\n\t\tstep into the text field. Then click <InlineCode text=\"IMPORT\"></InlineCode>\n\t\tor press enter.\n\t</p>\n\t<p>\n\t\tImporting will delete all the links that were previously saved in your browser.\n\t</p>\n\t<Header2 tag=\"nuances\" text=\"Nuances\"></Header2>\n\t<Header2 tag=\"source-code\" text=\"Read the source code\"></Header2>\n\t<p>\n\t\tThe source code for Quick Links is available\n\t\t<a href=\"https://github.com/aaronstanek/quick_links_chrome\">here</a>.\n\t</p>\n\t<p>\n\t\tThe source code for this documentation page is available\n\t\t<a href=\"https://github.com/aaronstanek/quick-links-docs\">here</a>.\n\t</p>\n</div>\n\n<style>\ndiv, img {\n\tbox-shadow: 0px 0px 3px black;\n}\n.centraltext {\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: black;\n\tborder-radius: 30px;\n\tmargin-top: 10px;\n\tmargin-bottom: 10px;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\twidth: 550px;\n\tmax-width: 80%;\n\tpadding: 20px;\n}\n.it {\n\tfont-style: italic;\n}\nimg {\n\twidth: 100%;\n\tborder-style: solid;\n\tborder-width: 1px;\n\tborder-color: black;\n\tborder-radius: 20px;\n}\n</style>",
    "<script lang=\"ts\">export let tag;\r\nexport let text;\r\n</script>\r\n\r\n<h1 id={tag}>{text}</h1>\r\n\r\n<hr>\r\n\r\n<style>\r\nhr {\r\n    border: 0px;\r\n    height: 0.5px;\r\n    background-color: black;\r\n}\r\n</style>",
    "<script lang=\"ts\">var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nimport { onMount } from \"svelte/internal\";\r\nexport let text;\r\nexport let color = undefined;\r\nlet spanElement;\r\nonMount(() => __awaiter(void 0, void 0, void 0, function* () {\r\n    if (typeof color !== \"undefined\") {\r\n        spanElement.style.color = color;\r\n    }\r\n}));\r\n</script>\r\n\r\n<span bind:this={spanElement}>{text}</span>\r\n\r\n<style>\r\nspan {\r\n    font-family: var(--code-font);\r\n    font-size: 15px;\r\n    background-color: gainsboro;\r\n}\r\n</style>"
  ],
  "names": [],
  "mappings": "AA8PA,iBAAG,CAAE,GAAG,cAAC,CAAC,AACT,UAAU,CAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,AAC9B,CAAC,AACD,YAAY,cAAC,CAAC,AACb,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,aAAa,CAAE,IAAI,CACnB,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,IAAI,CACjB,YAAY,CAAE,IAAI,CAClB,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,IAAI,AACd,CAAC,AACD,GAAG,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,AACnB,CAAC,AACD,GAAG,cAAC,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,KAAK,CACnB,YAAY,CAAE,GAAG,CACjB,YAAY,CAAE,KAAK,CACnB,aAAa,CAAE,IAAI,AACpB,CAAC;AC9QD,EAAE,cAAC,CAAC,AACA,MAAM,CAAE,GAAG,CACX,MAAM,CAAE,KAAK,CACb,gBAAgB,CAAE,KAAK,AAC3B,CAAC;ACUD,IAAI,eAAC,CAAC,AACF,WAAW,CAAE,IAAI,WAAW,CAAC,CAC7B,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,SAAS,AAC/B,CAAC"
}